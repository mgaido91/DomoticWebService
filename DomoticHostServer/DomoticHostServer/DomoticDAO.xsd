<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DomoticDAO" targetNamespace="http://tempuri.org/DomoticDAO.xsd" xmlns:mstns="http://tempuri.org/DomoticDAO.xsd" xmlns="http://tempuri.org/DomoticDAO.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="domoticConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="domoticConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DomoticHostServer.Properties.Settings.GlobalReference.Default.domoticConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="temperatureTableAdapter" GeneratorDataComponentClassName="temperatureTableAdapter" Name="temperature" UserDataComponentName="temperatureTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.temperature" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[temperature] WHERE (([time] = @Original_time) AND ([value] = @Original_value))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[temperature] ([time], [value]) VALUES (@time, @value);
SELECT time, value FROM temperature WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT time, value FROM dbo.temperature</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[temperature] SET [time] = @time, [value] = @value WHERE (([time] = @Original_time) AND ([value] = @Original_value));
SELECT time, value FROM temperature WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="time" DataSetColumn="time" />
              <Mapping SourceColumn="value" DataSetColumn="value" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.temperature" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetLastDatum" GetMethodModifier="Public" GetMethodName="GetLastDatum" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetLastDatum" UserSourceName="GetLastDatum">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT top 1 time, value FROM dbo.temperature order by time desc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertValue" Modifier="Public" Name="InsertValue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertValue">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[temperature] ( [value]) VALUES (@value);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="value" DataSourceName="domotic.dbo.temperature" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TemperatureByHoursTableAdapter" GeneratorDataComponentClassName="TemperatureByHoursTableAdapter" Name="TemperatureByHours" UserDataComponentName="TemperatureByHoursTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT 
     avg([value]) as mean,
	DATEPART(YEAR, time) as anno, DATEPART(MONTH, time) as mese, DATEPART(DAY, time) as giorno, DATEPART(HOUR, time) as hour
  FROM [domotic].[dbo].[temperature]
  group by DATEPART(YEAR, time), DATEPART(MONTH, time),DATEPART(DAY, time), DATEPART(HOUR, time)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="mean" DataSetColumn="mean" />
              <Mapping SourceColumn="anno" DataSetColumn="anno" />
              <Mapping SourceColumn="mese" DataSetColumn="mese" />
              <Mapping SourceColumn="giorno" DataSetColumn="giorno" />
              <Mapping SourceColumn="hour" DataSetColumn="hour" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataOverLast" GetMethodModifier="Public" GetMethodName="GetDataOverLast" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataOverLast" UserSourceName="GetDataOverLast">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT 
     avg([value]) as mean,
	DATEPART(YEAR, time) as anno, DATEPART(MONTH, time) as mese, DATEPART(DAY, time) as giorno, DATEPART(HOUR, time) as hour
  FROM [domotic].[dbo].[temperature]
   where DATEDIFF(hh,time, CURRENT_TIMESTAMP)&lt;@ore
  group by DATEPART(YEAR, time), DATEPART(MONTH, time),DATEPART(DAY, time), DATEPART(HOUR, time)
order by DATEPART(YEAR, time), DATEPART(MONTH, time),DATEPART(DAY, time), DATEPART(HOUR, time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ore" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@ore" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TemperatureByDaysTableAdapter" GeneratorDataComponentClassName="TemperatureByDaysTableAdapter" Name="TemperatureByDays" UserDataComponentName="TemperatureByDaysTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="GetData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT 
     avg([value]) as mean,
	DATEPART(YEAR, time) as anno, DATEPART(MONTH, time) as mese, DATEPART(DAY, time) as giorno
  FROM [domotic].[dbo].[temperature]
   where DATEDIFF(dd,time, CURRENT_TIMESTAMP)&lt;@days
  group by DATEPART(YEAR, time), DATEPART(MONTH, time),DATEPART(DAY, time)
order by DATEPART(YEAR, time), DATEPART(MONTH, time),DATEPART(DAY, time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="days" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@days" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="mean" DataSetColumn="mean" />
              <Mapping SourceColumn="anno" DataSetColumn="anno" />
              <Mapping SourceColumn="mese" DataSetColumn="mese" />
              <Mapping SourceColumn="giorno" DataSetColumn="giorno" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="lightTableAdapter" GeneratorDataComponentClassName="lightTableAdapter" Name="light" UserDataComponentName="lightTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.light" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[light] WHERE (([time] = @Original_time) AND ([turned_on] = @Original_turned_on))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[light] ([time], [turned_on]) VALUES (@time, @turned_on);
SELECT time, turned_on FROM light WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT time, turned_on FROM dbo.light</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[light] SET [time] = @time, [turned_on] = @turned_on WHERE (([time] = @Original_time) AND ([turned_on] = @Original_turned_on));
SELECT time, turned_on FROM light WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="time" DataSetColumn="time" />
              <Mapping SourceColumn="turned_on" DataSetColumn="turned_on" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.light" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetLastDatum" GetMethodModifier="Public" GetMethodName="GetLastDatum" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetLastDatum" UserSourceName="GetLastDatum">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT top 1 time, turned_on FROM dbo.light order by time desc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertValue" Modifier="Public" Name="InsertValue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertValue">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[light] ( [turned_on]) VALUES (@turned_on);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="turned_on" ColumnName="turned_on" DataSourceName="domotic.dbo.light" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="luminosityTableAdapter" GeneratorDataComponentClassName="luminosityTableAdapter" Name="luminosity" UserDataComponentName="luminosityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.luminosity" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[luminosity] WHERE (([time] = @Original_time) AND ([value] = @Original_value))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[luminosity] ([time], [value]) VALUES (@time, @value);
SELECT time, value FROM luminosity WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT time, value FROM dbo.luminosity</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[luminosity] SET [time] = @time, [value] = @value WHERE (([time] = @Original_time) AND ([value] = @Original_value));
SELECT time, value FROM luminosity WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="time" DataSetColumn="time" />
              <Mapping SourceColumn="value" DataSetColumn="value" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.luminosity" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetLastDatum" GetMethodModifier="Public" GetMethodName="GetLastDatum" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetLastDatum" UserSourceName="GetLastDatum">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT top 1 time, value FROM dbo.luminosity order by time desc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertValue" Modifier="Public" Name="InsertValue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertValue">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[luminosity] ( [value]) VALUES ( @value);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="value" DataSourceName="domotic.dbo.luminosity" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="presenceTableAdapter" GeneratorDataComponentClassName="presenceTableAdapter" Name="presence" UserDataComponentName="presenceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.presence" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[presence] WHERE (([time] = @Original_time) AND ([presence] = @Original_presence))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="presence" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[presence] ([time], [presence]) VALUES (@time, @presence);
SELECT time, presence FROM presence WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="presence" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT time, presence FROM dbo.presence</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[presence] SET [time] = @time, [presence] = @presence WHERE (([time] = @Original_time) AND ([presence] = @Original_presence));
SELECT time, presence FROM presence WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="presence" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_presence" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="presence" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="time" DataSetColumn="time" />
              <Mapping SourceColumn="presence" DataSetColumn="presence" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.presence" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataInLastHours" GetMethodModifier="Public" GetMethodName="GetDataInLastHours" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataInLastHours" UserSourceName="GetDataInLastHours">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT time, presence FROM dbo.presence where DATEDIFF(hh,time, CURRENT_TIMESTAMP)&lt;@ore</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ore" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@ore" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.presence" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetLastDatum" GetMethodModifier="Public" GetMethodName="GetLastDatum" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetLastDatum" UserSourceName="GetLastDatum">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT top 1 time, presence FROM dbo.presence order by time desc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertValue" Modifier="Public" Name="InsertValue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertValue">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[presence] ( [presence]) VALUES (@presence);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="presence" ColumnName="presence" DataSourceName="domotic.dbo.presence" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@presence" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="presence" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="heatherTableAdapter" GeneratorDataComponentClassName="heatherTableAdapter" Name="heather" UserDataComponentName="heatherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.heather" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[heather] WHERE (([time] = @Original_time) AND ([turned_on] = @Original_turned_on))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[heather] ([time], [turned_on]) VALUES (@time, @turned_on);
SELECT time, turned_on FROM heather WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT time, turned_on FROM dbo.heather</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[heather] SET [time] = @time, [turned_on] = @turned_on WHERE (([time] = @Original_time) AND ([turned_on] = @Original_turned_on));
SELECT time, turned_on FROM heather WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="time" DataSetColumn="time" />
              <Mapping SourceColumn="turned_on" DataSetColumn="turned_on" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.heather" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetLastDatum" GetMethodModifier="Public" GetMethodName="GetLastDatum" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetLastDatum" UserSourceName="GetLastDatum">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT top 1 time, turned_on FROM dbo.heather order by time desc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertValue" Modifier="Public" Name="InsertValue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertValue">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[heather] ([turned_on]) VALUES (@turned_on);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="turned_on" ColumnName="turned_on" DataSourceName="domotic.dbo.heather" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@turned_on" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="turned_on" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DomoticDAO" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DomoticDAO" msprop:Generator_UserDSName="DomoticDAO">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="temperature" msprop:Generator_TableClassName="temperatureDataTable" msprop:Generator_TableVarName="tabletemperature" msprop:Generator_RowChangedName="temperatureRowChanged" msprop:Generator_TablePropName="temperature" msprop:Generator_RowDeletingName="temperatureRowDeleting" msprop:Generator_RowChangingName="temperatureRowChanging" msprop:Generator_RowEvHandlerName="temperatureRowChangeEventHandler" msprop:Generator_RowDeletedName="temperatureRowDeleted" msprop:Generator_RowClassName="temperatureRow" msprop:Generator_UserTableName="temperature" msprop:Generator_RowEvArgName="temperatureRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="time" msprop:Generator_ColumnVarNameInTable="columntime" msprop:Generator_ColumnPropNameInRow="time" msprop:Generator_ColumnPropNameInTable="timeColumn" msprop:Generator_UserColumnName="time" type="xs:dateTime" />
              <xs:element name="value" msprop:Generator_ColumnVarNameInTable="columnvalue" msprop:Generator_ColumnPropNameInRow="value" msprop:Generator_ColumnPropNameInTable="valueColumn" msprop:Generator_UserColumnName="value" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TemperatureByHours" msprop:Generator_TableClassName="TemperatureByHoursDataTable" msprop:Generator_TableVarName="tableTemperatureByHours" msprop:Generator_TablePropName="TemperatureByHours" msprop:Generator_RowDeletingName="TemperatureByHoursRowDeleting" msprop:Generator_RowChangingName="TemperatureByHoursRowChanging" msprop:Generator_RowEvHandlerName="TemperatureByHoursRowChangeEventHandler" msprop:Generator_RowDeletedName="TemperatureByHoursRowDeleted" msprop:Generator_UserTableName="TemperatureByHours" msprop:Generator_RowChangedName="TemperatureByHoursRowChanged" msprop:Generator_RowEvArgName="TemperatureByHoursRowChangeEvent" msprop:Generator_RowClassName="TemperatureByHoursRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="mean" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnmean" msprop:Generator_ColumnPropNameInRow="mean" msprop:Generator_ColumnPropNameInTable="meanColumn" msprop:Generator_UserColumnName="mean" type="xs:double" minOccurs="0" />
              <xs:element name="anno" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnanno" msprop:Generator_ColumnPropNameInRow="anno" msprop:Generator_ColumnPropNameInTable="annoColumn" msprop:Generator_UserColumnName="anno" type="xs:int" minOccurs="0" />
              <xs:element name="mese" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnmese" msprop:Generator_ColumnPropNameInRow="mese" msprop:Generator_ColumnPropNameInTable="meseColumn" msprop:Generator_UserColumnName="mese" type="xs:int" minOccurs="0" />
              <xs:element name="giorno" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columngiorno" msprop:Generator_ColumnPropNameInRow="giorno" msprop:Generator_ColumnPropNameInTable="giornoColumn" msprop:Generator_UserColumnName="giorno" type="xs:int" minOccurs="0" />
              <xs:element name="hour" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnhour" msprop:Generator_ColumnPropNameInRow="hour" msprop:Generator_ColumnPropNameInTable="hourColumn" msprop:Generator_UserColumnName="hour" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TemperatureByDays" msprop:Generator_TableClassName="TemperatureByDaysDataTable" msprop:Generator_TableVarName="tableTemperatureByDays" msprop:Generator_TablePropName="TemperatureByDays" msprop:Generator_RowDeletingName="TemperatureByDaysRowDeleting" msprop:Generator_RowChangingName="TemperatureByDaysRowChanging" msprop:Generator_RowEvHandlerName="TemperatureByDaysRowChangeEventHandler" msprop:Generator_RowDeletedName="TemperatureByDaysRowDeleted" msprop:Generator_UserTableName="TemperatureByDays" msprop:Generator_RowChangedName="TemperatureByDaysRowChanged" msprop:Generator_RowEvArgName="TemperatureByDaysRowChangeEvent" msprop:Generator_RowClassName="TemperatureByDaysRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="mean" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnmean" msprop:Generator_ColumnPropNameInRow="mean" msprop:Generator_ColumnPropNameInTable="meanColumn" msprop:Generator_UserColumnName="mean" type="xs:double" minOccurs="0" />
              <xs:element name="anno" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnanno" msprop:Generator_ColumnPropNameInRow="anno" msprop:Generator_ColumnPropNameInTable="annoColumn" msprop:Generator_UserColumnName="anno" type="xs:int" minOccurs="0" />
              <xs:element name="mese" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnmese" msprop:Generator_ColumnPropNameInRow="mese" msprop:Generator_ColumnPropNameInTable="meseColumn" msprop:Generator_UserColumnName="mese" type="xs:int" minOccurs="0" />
              <xs:element name="giorno" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columngiorno" msprop:Generator_ColumnPropNameInRow="giorno" msprop:Generator_ColumnPropNameInTable="giornoColumn" msprop:Generator_UserColumnName="giorno" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="light" msprop:Generator_TableClassName="lightDataTable" msprop:Generator_TableVarName="tablelight" msprop:Generator_TablePropName="light" msprop:Generator_RowDeletingName="lightRowDeleting" msprop:Generator_RowChangingName="lightRowChanging" msprop:Generator_RowEvHandlerName="lightRowChangeEventHandler" msprop:Generator_RowDeletedName="lightRowDeleted" msprop:Generator_UserTableName="light" msprop:Generator_RowChangedName="lightRowChanged" msprop:Generator_RowEvArgName="lightRowChangeEvent" msprop:Generator_RowClassName="lightRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="time" msprop:Generator_ColumnVarNameInTable="columntime" msprop:Generator_ColumnPropNameInRow="time" msprop:Generator_ColumnPropNameInTable="timeColumn" msprop:Generator_UserColumnName="time" type="xs:dateTime" />
              <xs:element name="turned_on" msprop:Generator_ColumnVarNameInTable="columnturned_on" msprop:Generator_ColumnPropNameInRow="turned_on" msprop:Generator_ColumnPropNameInTable="turned_onColumn" msprop:Generator_UserColumnName="turned_on" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="luminosity" msprop:Generator_TableClassName="luminosityDataTable" msprop:Generator_TableVarName="tableluminosity" msprop:Generator_RowChangedName="luminosityRowChanged" msprop:Generator_TablePropName="luminosity" msprop:Generator_RowDeletingName="luminosityRowDeleting" msprop:Generator_RowChangingName="luminosityRowChanging" msprop:Generator_RowEvHandlerName="luminosityRowChangeEventHandler" msprop:Generator_RowDeletedName="luminosityRowDeleted" msprop:Generator_RowClassName="luminosityRow" msprop:Generator_UserTableName="luminosity" msprop:Generator_RowEvArgName="luminosityRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="time" msprop:Generator_ColumnVarNameInTable="columntime" msprop:Generator_ColumnPropNameInRow="time" msprop:Generator_ColumnPropNameInTable="timeColumn" msprop:Generator_UserColumnName="time" type="xs:dateTime" />
              <xs:element name="value" msprop:Generator_ColumnVarNameInTable="columnvalue" msprop:Generator_ColumnPropNameInRow="value" msprop:Generator_ColumnPropNameInTable="valueColumn" msprop:Generator_UserColumnName="value" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="presence" msprop:Generator_TableClassName="presenceDataTable" msprop:Generator_TableVarName="tablepresence" msprop:Generator_TablePropName="presence" msprop:Generator_RowDeletingName="presenceRowDeleting" msprop:Generator_RowChangingName="presenceRowChanging" msprop:Generator_RowEvHandlerName="presenceRowChangeEventHandler" msprop:Generator_RowDeletedName="presenceRowDeleted" msprop:Generator_UserTableName="presence" msprop:Generator_RowChangedName="presenceRowChanged" msprop:Generator_RowEvArgName="presenceRowChangeEvent" msprop:Generator_RowClassName="presenceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="time" msprop:Generator_ColumnVarNameInTable="columntime" msprop:Generator_ColumnPropNameInRow="time" msprop:Generator_ColumnPropNameInTable="timeColumn" msprop:Generator_UserColumnName="time" type="xs:dateTime" />
              <xs:element name="presence" msprop:Generator_ColumnVarNameInTable="columnpresence" msprop:Generator_ColumnPropNameInRow="presence" msprop:Generator_ColumnPropNameInTable="presenceColumn" msprop:Generator_UserColumnName="presence" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="heather" msprop:Generator_TableClassName="heatherDataTable" msprop:Generator_TableVarName="tableheather" msprop:Generator_TablePropName="heather" msprop:Generator_RowDeletingName="heatherRowDeleting" msprop:Generator_RowChangingName="heatherRowChanging" msprop:Generator_RowEvHandlerName="heatherRowChangeEventHandler" msprop:Generator_RowDeletedName="heatherRowDeleted" msprop:Generator_UserTableName="heather" msprop:Generator_RowChangedName="heatherRowChanged" msprop:Generator_RowEvArgName="heatherRowChangeEvent" msprop:Generator_RowClassName="heatherRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="time" msprop:Generator_ColumnVarNameInTable="columntime" msprop:Generator_ColumnPropNameInRow="time" msprop:Generator_ColumnPropNameInTable="timeColumn" msprop:Generator_UserColumnName="time" type="xs:dateTime" />
              <xs:element name="turned_on" msprop:Generator_ColumnVarNameInTable="columnturned_on" msprop:Generator_ColumnPropNameInRow="turned_on" msprop:Generator_ColumnPropNameInTable="turned_onColumn" msprop:Generator_UserColumnName="turned_on" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:temperature" />
      <xs:field xpath="mstns:time" />
    </xs:unique>
    <xs:unique name="light_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:light" />
      <xs:field xpath="mstns:time" />
    </xs:unique>
    <xs:unique name="luminosity_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:luminosity" />
      <xs:field xpath="mstns:time" />
    </xs:unique>
    <xs:unique name="presence_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:presence" />
      <xs:field xpath="mstns:time" />
    </xs:unique>
    <xs:unique name="heather_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:heather" />
      <xs:field xpath="mstns:time" />
    </xs:unique>
  </xs:element>
</xs:schema>