<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DomoticDAO" targetNamespace="http://tempuri.org/DomoticDAO.xsd" xmlns:mstns="http://tempuri.org/DomoticDAO.xsd" xmlns="http://tempuri.org/DomoticDAO.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="domoticConnectionString" IsAppSettingsProperty="true" Modifier="Assembly" Name="domoticConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DomoticHostServer.Properties.Settings.GlobalReference.Default.domoticConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="temperatureTableAdapter" GeneratorDataComponentClassName="temperatureTableAdapter" Name="temperature" UserDataComponentName="temperatureTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="domotic.dbo.temperature" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[temperature] WHERE (([time] = @Original_time) AND ([value] = @Original_value))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[temperature] ([time], [value]) VALUES (@time, @value);
SELECT time, value FROM temperature WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT time, value FROM dbo.temperature</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[temperature] SET [time] = @time, [value] = @value WHERE (([time] = @Original_time) AND ([value] = @Original_value));
SELECT time, value FROM temperature WHERE (time = @time)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_time" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="time" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_value" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="time" DataSetColumn="time" />
              <Mapping SourceColumn="value" DataSetColumn="value" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="domoticConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertValue" Modifier="Public" Name="InsertValue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertValue">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[temperature] ( [value]) VALUES (@value);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="value" DataSourceName="domotic.dbo.temperature" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DomoticDAO" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DomoticDAO" msprop:Generator_UserDSName="DomoticDAO">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="temperature" msprop:Generator_TableClassName="temperatureDataTable" msprop:Generator_TableVarName="tabletemperature" msprop:Generator_RowChangedName="temperatureRowChanged" msprop:Generator_TablePropName="temperature" msprop:Generator_RowDeletingName="temperatureRowDeleting" msprop:Generator_RowChangingName="temperatureRowChanging" msprop:Generator_RowEvHandlerName="temperatureRowChangeEventHandler" msprop:Generator_RowDeletedName="temperatureRowDeleted" msprop:Generator_RowClassName="temperatureRow" msprop:Generator_UserTableName="temperature" msprop:Generator_RowEvArgName="temperatureRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="time" msprop:Generator_ColumnVarNameInTable="columntime" msprop:Generator_ColumnPropNameInRow="time" msprop:Generator_ColumnPropNameInTable="timeColumn" msprop:Generator_UserColumnName="time" type="xs:dateTime" />
              <xs:element name="value" msprop:Generator_ColumnVarNameInTable="columnvalue" msprop:Generator_ColumnPropNameInRow="value" msprop:Generator_ColumnPropNameInTable="valueColumn" msprop:Generator_UserColumnName="value" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:temperature" />
      <xs:field xpath="mstns:time" />
    </xs:unique>
  </xs:element>
</xs:schema>